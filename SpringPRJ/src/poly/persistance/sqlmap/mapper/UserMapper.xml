<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.UserMapper">

	<select id="getMemberList" resultType="UserDTO">
		 SELECT USER_SEQ_NO as userSeqNo,
				USER_ID as userId,
				USER_NAME as userName,
				PASSWORD as password,
				EMAIL as email,
				GENDER as gender,
				REG_DATE as regDate,
				CHG_DATE as chgDate
		 FROM USER_INFO
	</select>
	
	<insert id="insertMember" parameterType="UserDTO">
		INSERT INTO USER_INFO (
			USER_SEQ_NO, 
			USER_ID, 
			USER_NAME, 
			PASSWORD, 
			EMAIL,
			GENDER,
			REG_DATE,
			CHG_DATE
		)VALUES (
			USER_INFO_SEQ.NEXTVAL,
			#{userId},
			#{userName},
			#{password},
			#{email},
			#{gender},
			SYSDATE,
			SYSDATE
		)
	</insert>
	
	<select id="checkDuplication" resultType="int" parameterType="string">
			SELECT COUNT(*)
			FROM USER_INFO
			WHERE USER_ID = #{id}
	</select>
	
	<select id="checkDuplicationEmail" resultType="int" parameterType="string">
			SELECT COUNT(*)
			FROM USER_INFO
			WHERE EMAIL = #{email}
	</select>
	
	<select id="checkDuplicationName" resultType="int" parameterType="string">
			SELECT COUNT(*)
			FROM USER_INFO
			WHERE USER_NAME = #{name}
	</select>
	
	<select id="getLoginInfo" parameterType="UserDTO" resultType="UserDTO">
		SELECT  USER_SEQ_NO as userSeqNo,
				USER_ID as userId,
				USER_NAME as userName,
				PASSWORD as password,
				EMAIL as email,
				GENDER as gender,
				REG_DATE as regDate,
				CHG_DATE as chgDate,
				EMAIL_CONFIRM as emailConfirm
		 FROM USER_INFO
		 WHERE USER_ID = #{userId}
		   AND PASSWORD = #{password}
	</select>
	
	
	
	<select id="getmyList" parameterType="UserDTO" resultType="UserDTO">
		SELECT  USER_SEQ_NO as userSeqNo,
				USER_ID as userId,
				USER_NAME as userName,
				PASSWORD as password,
				EMAIL as email,
				GENDER as gender,
				REG_DATE as regDate,
				CHG_DATE as chgDate
		 FROM USER_INFO
		 WHERE USER_ID = #{userId}
	</select>
	
	<select id="getmylist2" parameterType="UserDTO" resultType="UserDTO">
		SELECT  USER_SEQ_NO as userSeqNo,
				USER_ID as userId,
				USER_NAME as userName,
				PASSWORD as password,
				EMAIL as email,
				GENDER as gender,
				REG_DATE as regDate,
				CHG_DATE as chgDate
		 FROM USER_INFO
		 WHERE USER_ID = #{userId}
		 AND USER_NAME = #{userName}
	</select>
	
	<update id="mylistrevise" parameterType="UserDTO" >
		UPDATE USER_INFO
		SET EMAIL = #{email}
		WHERE USER_ID = #{userId}
	</update>
	
	<delete id="mylistdelete" parameterType="UserDTO">
		DELETE FROM USER_INFO
		WHERE USER_ID = #{userId}
	</delete>
	
	<select id="getIdfind" parameterType="UserDTO" resultType="UserDTO">
		SELECT  USER_SEQ_NO as userSeqNo,
				USER_ID as userId,
				USER_NAME as userName,
				PASSWORD as password,
				EMAIL as email,
				GENDER as gender,
				REG_DATE as regDate,
				CHG_DATE as chgDate
		 FROM USER_INFO
		 WHERE USER_NAME = #{userName}
		   AND EMAIL = #{email}
		    
	</select>
	
	<select id="getPWfind" parameterType="UserDTO" resultType="UserDTO">
		SELECT  USER_SEQ_NO as userSeqNo,
				USER_ID as userId,
				USER_NAME as userName,
				PASSWORD as password,
				EMAIL as email,
				GENDER as gender,
				REG_DATE as regDate,
				CHG_DATE as chgDate
		 FROM USER_INFO
		 WHERE USER_NAME = #{userName}
		   AND USER_ID = #{userId}
	</select>
	
	
	<update id="pwrevise" parameterType="UserDTO" >
		UPDATE USER_INFO
		SET PASSWORD = #{password}
		WHERE USER_ID = #{userId}
	</update>
	
	<select id="getUserInfo" parameterType="UserDTO" resultType="UserDTO">
		SELECT  USER_SEQ_NO as userSeqNo
		 FROM USER_INFO
		 WHERE USER_NAME = #{userName}
		 AND USER_ID = #{userId} 
	</select>
			
	<update id="EmailConfirm" parameterType="UserDTO">
		UPDATE USER_INFO
		SET EMAIL_CONFIRM = 'Y'
		WHERE USER_SEQ_NO = #{userSeqNo}
	</update>
	
	<select id="getUserList" resultType="UserDTO" parameterType="PagingDTO">
		SELECT
			  A.UN,
			  A.*
		FROM
		  (SELECT 
		          ROWNUM UN,
			      UI.USER_SEQ_NO as userSeqNo,
				  UI.USER_ID as userId,
				  UI.USER_NAME as userName,
				  UI.PASSWORD as password,
				  UI.EMAIL as email,
				  UI.GENDER as gender,
				  UI.REG_DATE as regDate,
				  UI.CHG_DATE as chgDate
		       FROM 
		          ( SELECT 
		              UI2.*
		            FROM 
		              USER_INFO UI2
		            ORDER BY
		              USER_SEQ_NO DESC
		            ) UI
         WHERE UI.USER_ID LIKE '%'|| #{keyword} ||'%'
       OR UI.USER_NAME LIKE '%'|| #{keyword} ||'%'
       OR UI.GENDER LIKE '%'|| #{keyword} ||'%'
       OR UI.EMAIL LIKE '%'|| #{keyword} ||'%'
        ) A 
      WHERE A.UN BETWEEN (( #{page_num}-1) * #{page_count} + 1  ) AND ( #{page_num} * #{page_count} )
      ORDER BY A.UN  
	</select>
	
	<select id="getUserListTotalCount" resultType="integer" parameterType="string">
		SELECT COUNT(0) AS CNT 
		FROM USER_INFO UI
		WHERE UI.USER_ID LIKE '%'|| #{keyword} ||'%'
       OR UI.USER_NAME LIKE '%'|| #{keyword} ||'%'
       OR UI.GENDER LIKE '%'|| #{keyword} ||'%'
       OR UI.EMAIL LIKE '%'|| #{keyword} ||'%'
	</select>
	
	<select id="getUserdetail" parameterType="UserDTO" resultType="UserDTO">
		SELECT  UI.USER_SEQ_NO as userSeqNo,
				UI.USER_ID as userId,
				UI.USER_NAME as userName,
				UI.PASSWORD as password,
				UI.EMAIL as email,
				UI.GENDER as gender,
				UI.REG_DATE as regDate,
				UI.CHG_DATE as chgDate
		 FROM USER_INFO UI
		 WHERE UI.USER_SEQ_NO = #{userSeqNo}
	</select>
	
	<update id="userrevise" parameterType="UserDTO">
		UPDATE USER_INFO 
		SET EMAIL = #{email}
		WHERE USER_SEQ_NO = #{userSeqNo}
	</update>
	
	<delete id="userdelete" parameterType="UserDTO">
		DELETE FROM USER_INFO
		WHERE USER_SEQ_NO = #{userSeqNo}
	</delete>
	
			
			
</mapper>