<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.MemMapper">

	<insert id="insertMember" parameterType="MemDTO">
		INSERT INTO REVIEW_INFO (
			REVIEW_SEQ_NO,
			TITLE,
			REVIEW_CONTENTS,
			REG_DT,
			CHG_DT,
			REVIEW_NAME,
			USER_ID
		) VALUES (
			MEM_INFO_SEQ.NEXTVAL,
			#{title},
			#{reviewContents},
			SYSDATE,
			SYSDATE,
			#{reviewName},
			#{userId}
		) 
	</insert>
	
	<select id="getReviewSeqNo" resultType="string">
		SELECT
			MAX(REVIEW_SEQ_NO)
		FROM
			REVIEW_INFO
	</select>
	<insert id="insertFile" parameterType="FileDTO">
		INSERT INTO FILE_INFO (
			FILE_SEQ,
			BRD_SEQ_NO,
			USER_NO,
			ORI_NAME,
			CHG_NAME,
			FILE_SIZE,
			FILE_PATH,
			EXTENSION,
			REG_DT,
			BRD_KIND
		) VALUES (
			FILE_SEQ.NEXTVAL,
			#{brdSeqNo},
			#{userNo},
			#{oriName},
			#{chgName},
			#{fileSize},
			#{filePath},
			#{extension},
			SYSDATE,
			#{brdKind}
		) 
	</insert>
	
	<select id="getMemberList" parameterType="MemDTO" resultType="MemDTO">
		 SELECT RI.REVIEW_SEQ_NO as reviewSeqNo,
				RI.TITLE as title,
				RI.REVIEW_CONTENTS as reviewContents,
				RI.REG_DT as regDt,
				RI.CHG_DT as chgDt,
				RI.REVIEW_NAME as reviewName,
				RI.USER_ID as userId,
				UI.USER_NAME as userName
		 FROM REVIEW_INFO RI
		 INNER JOIN USER_INFO UI ON RI.USER_ID = UI.USER_ID
		 WHERE RI.USER_ID = #{userId}
	</select>	
	
	<select id="getMemberdetail" resultType="MemDTO">
		SELECT RI.REVIEW_SEQ_NO as reviewSeqNo,
				RI.TITLE as title,
				RI.REVIEW_CONTENTS as reviewContents,
				RI.REG_DT as regDt,
				RI.CHG_DT as chgDt,
				RI.REVIEW_NAME as reviewName,
				RI.USER_ID as userId,
				UI.USER_NAME as userName,
				FI.CHG_NAME as chgName,
				FI.FILE_SEQ as fileSeq
		 FROM REVIEW_INFO RI
        LEFT JOIN ( SELECT BRD_KIND, 
                    CHG_NAME, 
                    FILE_SEQ, 
                    BRD_SEQ_NO 
                    FROM FILE_INFO 
                    WHERE BRD_KIND = 'review'
                  )FI  ON RI.REVIEW_SEQ_NO = FI.BRD_SEQ_NO 
        INNER JOIN USER_INFO UI ON UI.USER_ID = RI.USER_ID
		 WHERE RI.REVIEW_SEQ_NO = #{reviewSeqNo}
	</select>	
	
	<select id="getMemberListTotalCount" resultType="integer" parameterType="string">
		SELECT COUNT(0) AS CNT 
		FROM REVIEW_INFO RI
		INNER JOIN USER_INFO UI ON RI.USER_ID = UI.USER_ID
		WHERE RI.TITLE LIKE '%'|| #{keyword} ||'%'
       OR RI.REVIEW_SEQ_NO LIKE '%'|| #{keyword} ||'%'
       OR RI.REVIEW_NAME LIKE '%'|| #{keyword} ||'%'
       OR UI.USER_NAME LIKE '%'|| #{keyword} ||'%'
	</select>
	
	<select id="getReviewList" resultType="MemDTO" parameterType="PagingDTO">
		SELECT
			  A.RN,
			  A.*
		FROM
		  (SELECT 
		          ROWNUM RN,
		          RI.REVIEW_SEQ_NO as reviewSeqNo,
		          RI.TITLE as title,
		          RI.REVIEW_CONTENTS as reviewContents,
		          RI.REG_DT as regDt,
		          RI.CHG_DT as chgDt,
		          RI.REVIEW_NAME as reviewName,
		          RI.USER_ID as userId,
		          UI.USER_NAME as userName
		       FROM 
		          ( SELECT 
		              RI2.*
		            FROM 
		              REVIEW_INFO RI2
		            ORDER BY
		              REVIEW_SEQ_NO DESC
		            ) RI
        INNER JOIN USER_INFO UI ON RI.USER_ID = UI.USER_ID
         WHERE RI.TITLE LIKE '%'|| #{keyword} ||'%'
       OR RI.REVIEW_SEQ_NO LIKE '%'|| #{keyword} ||'%'
       OR RI.REVIEW_NAME LIKE '%'|| #{keyword} ||'%'
       OR UI.USER_NAME LIKE '%'|| #{keyword} ||'%'
        ) A 
      WHERE A.RN BETWEEN (( #{page_num}-1) * #{page_count} + 1  ) AND ( #{page_num} * #{page_count} )
      ORDER BY A.RN  
	</select>
	
	<update id="writerevise" parameterType="MemDTO">
		UPDATE REVIEW_INFO 
		SET TITLE = #{title}, 
			REVIEW_CONTENTS = #{reviewContents}, 
			REVIEW_NAME = #{reviewName}, 
			CHG_DT = SYSDATE
		WHERE REVIEW_SEQ_NO = #{reviewSeqNo}
	</update>
	
	<update id="filerevise" parameterType="FileDTO">
		UPDATE FILE_INFO 
		SET CHG_NAME = #{chgName}, 
			ORI_NAME = #{oriName}, 
			FILE_SIZE = #{fileSize}, 
			FILE_PATH = #{filePath},
			EXTENSION = #{extension}
		WHERE FILE_SEQ = #{fileSeq}
	</update>
	
	
	<delete id="writedelete" parameterType="MemDTO">
		DELETE FROM REVIEW_INFO
		WHERE REVIEW_SEQ_NO = #{reviewSeqNo}
	</delete>
	
	<delete id="filedelete" parameterType="FileDTO">
		DELETE FROM FILE_INFO
		WHERE FILE_SEQ = #{fileSeq}
	</delete>
	
	<delete id="mylistdelete" parameterType="MemDTO">
		DELETE FROM REVIEW_INFO
		WHERE USER_ID = #{userId}
	</delete>
	
	<select id="getAllList" resultType="AllDTO" parameterType="PagingDTO">
		SELECT
		    C.RN
		    ,C.*
		FROM (
  
				SELECT 
			          ROWNUM AS RN,
			          B.*
		 		FROM
		          	(SELECT
		                  	A.*
		  		FROM
		          	(SELECT 
			                  '리뷰' AS boardName,
			                  RI.REVIEW_SEQ_NO as reviewSeqNo,
			                  RI.TITLE as title,
			                  RI.REVIEW_CONTENTS as reviewContents,
			                  RI.REG_DT as regDt,
			                  RI.CHG_DT as chgDt,
			                  RI.REVIEW_NAME as reviewName
			               FROM REVIEW_INFO RI
			               WHERE RI.USER_ID = #{userId}
			          UNION ALL
			               SELECT 
			                  '자유토크',
			                  TI.TALK_SEQ_NO as talkSeqNo,
			                  TI.TITLE as title,
			                  TI.TALK_CONTENTS as talkContents,
			                  TI.REG_DT as regDt,
			                  TI.CHG_DT as chgDt,
			                  NULL
			               FROM TALK_INFO TI
			               WHERE TI.USER_ID = #{userId}
			          UNION ALL
			                SELECT
			                  '간식',
			                  EI.EAT_SEQ_NO as eatSeqNo,
			                  EI.TITLE as title,
			                  EI.EAT_CONTENTS as eatContents,
			                  EI.REG_DT as regDt,
			                  EI.CHG_DT as chgDt,
			                  NULL
			               FROM EAT_INFO EI
			               WHERE EI.USER_ID = #{userId}
			          UNION ALL
			                SELECT
			                  '분양',
			                  SI.SELL_SEQ_NO as sellSeqNo,
			                  SI.TITLE as title,
			                  SI.SELL_CONTENTS as sellContents,
			                  SI.REG_DT as regDt,
			                  SI.CHG_DT as chgDt,
			                  NULL
			               FROM SELL_INFO SI
			               WHERE SI.USER_ID = #{userId}
			          UNION ALL    
			                SELECT
			                  '미용',
			                  BI.BEAUTY_SEQ_NO as beautySeqNo,
			                  BI.TITLE as title,
			                  BI.BEAUTY_CONTENTS as beautyContents,
			                  BI.REG_DT as regDt,
			                  BI.CHG_DT as chgDt,
			                  NULL
			               FROM BEAUTY_INFO BI
			               WHERE BI.USER_ID = #{userId}
			          UNION ALL
			                SELECT
			                  '생활용품',
			                  HI.HOMEGOODS_SEQ_NO as homegoodsSeqNo,
			                  HI.TITLE as title,
			                  HI.HOMEGOODS_CONTENTS as homegoodsContents,
			                  HI.REG_DT as regDt,
			                  HI.CHG_DT as chgDt,
			                  NULL
			               FROM HOMEGOODS_INFO HI
			               WHERE HI.USER_ID = #{userId}
			               ) A 
			               ORDER BY A.CHGDT DESC, A.REVIEWSEQNO DESC
			             ) B
			          ) C
						WHERE C.RN BETWEEN (( #{page_num}-1) * #{page_count} + 1  ) AND ( #{page_num} * #{page_count} )
						
     
     
			
	</select>
	
	<select id="getMemberListTotalCount2" resultType="integer" parameterType="string">
		SELECT COUNT(0) AS CNT
		FROM(
		  SELECT 
		  RI.REVIEW_SEQ_NO as reviewSeqNo
		          
		       FROM REVIEW_INFO RI
		       WHERE RI.USER_ID = #{userId}
		  UNION
		       SELECT 
		          TI.TALK_SEQ_NO as talkSeqNo
		       FROM TALK_INFO TI
		       WHERE TI.USER_ID = #{userId}
		  UNION
		        SELECT
		          EI.EAT_SEQ_NO as eatSeqNo
		       FROM EAT_INFO EI
		       WHERE EI.USER_ID = #{userId}
		  UNION
		        SELECT
		          SI.SELL_SEQ_NO as sellSeqNo
		       FROM SELL_INFO SI
		       WHERE SI.USER_ID = #{userId}
		  UNION     
		        SELECT
		          BI.BEAUTY_SEQ_NO as beautySeqNo
		       FROM BEAUTY_INFO BI
		       WHERE BI.USER_ID = #{userId}
		  UNION
		        SELECT
		          HI.HOMEGOODS_SEQ_NO as homegoodsSeqNo
		       FROM HOMEGOODS_INFO HI
		       WHERE HI.USER_ID = #{userId}) A
	</select>
	
	<select id="getAlldetail" resultType="AllDTO">
		  SELECT
		  			A.*
		  FROM (
	      SELECT 
                  '리뷰게시판' AS boardName,
                  RI.REVIEW_SEQ_NO as reviewSeqNo,
                  RI.TITLE as title,
                  RI.REVIEW_CONTENTS as reviewContents,
                  RI.REG_DT as regDt,
                  RI.CHG_DT as chgDt,
                  RI.REVIEW_NAME as reviewName,
                  FI.CHG_NAME as chgName,
                  FI.FILE_SEQ as fileSeq
          FROM    REVIEW_INFO RI
          LEFT JOIN ( SELECT BRD_KIND, 
                              CHG_NAME, 
                              FILE_SEQ, 
                              BRD_SEQ_NO 
                      FROM FILE_INFO 
                      WHERE BRD_KIND = 'review'
                  )FI  ON RI.REVIEW_SEQ_NO = FI.BRD_SEQ_NO
		UNION
		  SELECT 
			    '자유토크',
			    TI.TALK_SEQ_NO as talkSeqNo,
			    TI.TITLE as title,
			    TI.TALK_CONTENTS as talkContents,
			    TI.REG_DT as regDt,
			    TI.CHG_DT as chgDt,
			    NULL,
                FI.CHG_NAME as chgName,
                FI.FILE_SEQ as fileSeq
		 FROM TALK_INFO TI
         LEFT JOIN ( SELECT BRD_KIND,
                            CHG_NAME, 
                            FILE_SEQ, 
                            BRD_SEQ_NO 
                            FROM FILE_INFO 
                            WHERE BRD_KIND = 'talk'	
                     )FI ON TI.TALK_SEQ_NO = FI.BRD_SEQ_NO
		UNION
			SELECT
	            '간식',
	            EI.EAT_SEQ_NO as eatSeqNo,
	            EI.TITLE as title,
	            EI.EAT_CONTENTS as eatContents,
	            EI.REG_DT as regDt,
	            EI.CHG_DT as chgDt,
	            NULL,
                FI.CHG_NAME as chgName,
                FI.FILE_SEQ as fileSeq
			 FROM EAT_INFO EI
             LEFT JOIN ( SELECT BRD_KIND,
                                CHG_NAME, 
                                FILE_SEQ, 
                                BRD_SEQ_NO 
                                FROM FILE_INFO 
                                WHERE BRD_KIND = 'eat'	
                       )FI ON EI.EAT_SEQ_NO = FI.BRD_SEQ_NO
		UNION
			  SELECT
	            '분양',
	            SI.SELL_SEQ_NO as sellSeqNo,
	            SI.TITLE as title,
	            SI.SELL_CONTENTS as sellContents,
	            SI.REG_DT as regDt,
	            SI.CHG_DT as chgDt,
	            NULL,
                FI.CHG_NAME as chgName,
                FI.FILE_SEQ as fileSeq
			 FROM SELL_INFO SI
             LEFT JOIN ( SELECT BRD_KIND,
                                CHG_NAME, 
                                FILE_SEQ, 
                                BRD_SEQ_NO 
                                FROM FILE_INFO 
                                WHERE BRD_KIND = 'sell'
                        ) FI ON SI.SELL_SEQ_NO = FI.BRD_SEQ_NO
		UNION     
			   SELECT
	            '미용',
	            BI.BEAUTY_SEQ_NO as beautySeqNo,
	            BI.TITLE as title,
	            BI.BEAUTY_CONTENTS as beautyContents,
	            BI.REG_DT as regDt,
	            BI.CHG_DT as chgDt,
	            NULL,
                FI.CHG_NAME as chgName,
                FI.FILE_SEQ as fileSeq
			 FROM BEAUTY_INFO BI
             LEFT JOIN ( SELECT BRD_KIND,
                                CHG_NAME, 
                                FILE_SEQ, 
                                BRD_SEQ_NO 
                                FROM FILE_INFO 
                                WHERE BRD_KIND = 'beauty'	
                        )FI ON BI.BEAUTY_SEQ_NO = FI.BRD_SEQ_NO 
		UNION
			   SELECT
	           '생활용품',
	            HI.HOMEGOODS_SEQ_NO as homegoodsSeqNo,
	            HI.TITLE as title,
	            HI.HOMEGOODS_CONTENTS as homegoodsContents,
	            HI.REG_DT as regDt,
	            HI.CHG_DT as chgDt,
	            NULL,
                FI.CHG_NAME as chgName,
                FI.FILE_SEQ as fileSeq
			 FROM HOMEGOODS_INFO HI
             LEFT JOIN ( SELECT BRD_KIND,
                                CHG_NAME, 
                                FILE_SEQ, 
                                BRD_SEQ_NO 
                                FROM FILE_INFO 
                                WHERE BRD_KIND = 'homegoods'	
                      )FI ON HI.HOMEGOODS_SEQ_NO = FI.BRD_SEQ_NO
		) A 
		    
	</select>
	
	
</mapper>